package com.example.backend.DAO;

import com.example.backend.POJO.Year;
import org.springframework.stereotype.Repository;
import jakarta.persistence.EntityManager;

import java.util.List;

@Repository
public class YearDAOImpl implements YearDAO {

    private EntityManager entityManager;

    @Override
    public int save(Year theYear) {
        entityManager.persist(theYear);
        entityManager.flush(); // Ensures the entity is saved and returns the generated ID
        return theYear.getYearId(); // Assuming getYearId() fetches the autogenerated ID
    }

    @Override
    public Year findById(int year_id) {
        return entityManager.find(Year.class, year_id);
    }

    @Override
    public List<Year> findAll() {
        String jpql = "SELECT y FROM Year y";
        return entityManager.createQuery(jpql, Year.class).getResultList();
    }

    @Override
    public int update(Year year) {
        Year existingYear = entityManager.find(Year.class, year.getYearId());
        if (existingYear != null) {
            existingYear.setYear(year.getYear());
            entityManager.merge(existingYear);
            return 1; // Indicating success
        }
        return 0; // Indicating failure
    }

    @Override
    public int delete(int year_id) {
        Year year = entityManager.find(Year.class, year_id);
        if (year != null) {
            entityManager.remove(year);
            return 1; // Indicating success
        }
        return 0; // Indicating failure
    }
}